name: CI
on:
  pull_request:
    branches: master
  push:
    branches: master
jobs:
  UnitTest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Test
        run: |
          docker build --target test -t test .
          docker run test
      - name: Extract Coverage
        run: |
          docker cp $(docker ps -l -q):/opt/app/.coverage .coverage.tmp
          pip install coverage
          coverage combine
          coverage xml
      - name: Upload Coverage
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
  IntegrationTest:
    needs: UnitTest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Docker Compose
        run: |
          docker-compose up -d
      - name: Test
        uses: cypress-io/github-action@v2
        with:
          project: ./integration_tests
          record: true
          tag: Integration
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  Deploy:
    if: ${{ github.event_name == 'push' }}
    needs: IntegrationTest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: true
  E2ETest:
    needs: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Sleep
        uses: juliangruber/sleep-action@v1
        with:
          time: 60s
      - name: Test
        uses: cypress-io/github-action@v2
        with:
          project: ./e2e_tests
          record: true
          tag: E2E
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Rollback
        if: failure()
        run: |
          RELEASES=$(curl -n -s https://api.heroku.com/apps/${{ secrets.HEROKU_APP_NAME }}/releases \
            -H "Accept: application/vnd.heroku+json; version=3" \
            -H "Authorization: Bearer ${{ secrets.HEROKU_API_KEY }}")
          LAST_VERSION=$(echo "${RELEASES}" | jq -r .[-2].id)
          PAYLOAD='{"release": "'"${LAST_VERSION}"'"}'
          curl -n -X POST https://api.heroku.com/apps/${{ secrets.HEROKU_APP_NAME }}/releases \
            -H "Accept: application/vnd.heroku+json; version=3" \
            -H "Authorization: Bearer ${{ secrets.HEROKU_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "${PAYLOAD}"
